"""create swagger entity tables

Revision ID: 96106954ea85
Revises: 6d5fe9b0b3f1
Create Date: 2025-10-24 05:06:51.880218

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '96106954ea85'
down_revision: Union[str, Sequence[str], None] = '6d5fe9b0b3f1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('git_name', sa.String(), nullable=False),
    sa.Column('git_email', sa.String(), nullable=False),
    sa.Column('email_normalized', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_normalized')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False, comment='Matches swagger Project.id'),
    sa.Column('name', sa.String(), nullable=False, comment='Project key, surfaced as swagger Project.name'),
    sa.Column('full_name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='Holds swagger permissions payload'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['projects.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('repositories',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('topics', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('default_branch', sa.String(), nullable=True),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id', 'name', name='uq_repository_project_name')
    )
    op.create_table('commits',
    sa.Column('sha', sa.String(), nullable=False),
    sa.Column('repo_id', sa.Uuid(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=True),
    sa.Column('committer_id', sa.Uuid(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('branch_names', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('tag_names', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('added_lines', sa.Integer(), nullable=False),
    sa.Column('deleted_lines', sa.Integer(), nullable=False),
    sa.Column('is_merge_commit', sa.Boolean(), nullable=False),
    sa.Column('diff_content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('committed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['committer_id'], ['authors.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['repo_id'], ['repositories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sha')
    )
    op.create_table('branches',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('repo_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('head_commit_sha', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['head_commit_sha'], ['commits.sha'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['repo_id'], ['repositories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repo_id', 'name', name='uq_branch_repo_name')
    )
    op.create_table('commit_files',
    sa.Column('change_id', sa.Uuid(), nullable=False),
    sa.Column('commit_sha', sa.String(), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('added_lines', sa.Integer(), nullable=False),
    sa.Column('deleted_lines', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['commit_sha'], ['commits.sha'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('change_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('commit_files')
    op.drop_table('branches')
    op.drop_table('commits')
    op.drop_table('repositories')
    op.drop_table('projects')
    op.drop_table('authors')
    # ### end Alembic commands ###
