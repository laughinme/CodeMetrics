"""create users table

Revision ID: fa110bc90883
Revises: 
Create Date: 2025-08-18 18:22:58.100224

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fa110bc90883'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm;")
    
    op.create_table('languages',
    sa.Column('code', sa.String(length=2), nullable=False),
    sa.Column('name_ru', sa.String(), nullable=False),
    sa.Column('name_en', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_index('languages_name_en_trgm', 'languages', ['name_en'], unique=False, postgresql_using='gin', postgresql_ops={'name_en': 'gin_trgm_ops'})
    op.create_index('languages_name_ru_trgm', 'languages', ['name_ru'], unique=False, postgresql_using='gin', postgresql_ops={'name_ru': 'gin_trgm_ops'})
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('profile_pic_url', sa.String(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('language_code', sa.String(length=2), nullable=True),
    sa.Column('is_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_onboarded', sa.Boolean(), nullable=False),
    sa.Column('banned', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['language_code'], ['languages.code'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('users_email_trgm', 'users', ['email'], unique=False, postgresql_using='gin', postgresql_ops={'email': 'gin_trgm_ops'})
    op.create_index('users_username_trgm', 'users', ['username'], unique=False, postgresql_using='gin', postgresql_ops={'username': 'gin_trgm_ops'})
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('users_username_trgm', table_name='users', postgresql_using='gin', postgresql_ops={'username': 'gin_trgm_ops'})
    op.drop_index('users_email_trgm', table_name='users', postgresql_using='gin', postgresql_ops={'email': 'gin_trgm_ops'})
    op.drop_table('users')
    op.drop_index('languages_name_ru_trgm', table_name='languages', postgresql_using='gin', postgresql_ops={'name_ru': 'gin_trgm_ops'})
    op.drop_index('languages_name_en_trgm', table_name='languages', postgresql_using='gin', postgresql_ops={'name_en': 'gin_trgm_ops'})
    op.drop_table('languages')
    
    op.execute("DROP EXTENSION IF EXISTS pg_trgm;")
    # ### end Alembic commands ###
